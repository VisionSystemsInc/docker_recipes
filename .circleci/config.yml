version: 2.1

# -----
# CircleCI custom commands
# -----
commands:

  # run "ci_load" command on user-selected docker-compose file
  # - cache is updated only from master branch of main repo (not forks)
  # - assumes python3 with pyyaml is already available
  # - assumes docker login was successful
  # - required environment variables:
  #     $VSI_COMMON_DIR - location of vsi_common repo
  # - optional enviromment variables
  #     $CI_RECIPE_REPO - dockerhub repo for recipe cache (default "vsiri/ci_cache_recipes")
  #     $CI_RECIPE_VERSION - version string for recipe cache (default "")
  # - each service identified in the docker-compose file will be separately
  #   built via "${VSI_COMMON_DIR}/linux/ci_load.py"
  # - As we are building recipes themselves, we ignore the vsiri/recipe
  #   dockerhub repo by setting "--recipe-repo" to a dummy variable.
  ci_load:
    description: Build dockers (ci_load)
    parameters:
      step_name:
        description: Step name
        type: string
        default: Build recipes (ci_load)
      compose_file:
        description: docker-compose file
        type: string
    steps:
      - run:
          name: << parameters.step_name >>
          command: |

            set -x

            # push only from master branch of main repo
            if [ "${CIRCLE_PROJECT_USERNAME,,}" == "visionsystemsinc" ] && \
               [ "${CIRCLE_BRANCH}" == "master" ]
            then
              CI_LOAD_OPTIONS=""
            else
              CI_LOAD_OPTIONS="--no-push"
            fi

            # environment
            : ${CI_RECIPE_REPO="vsiri/ci_cache_recipes"}
            : ${CI_RECIPE_VERSION=}
            COMPOSE_FILE="<< parameters.compose_file >>"
            SERVICES=( $(docker-compose -f "${COMPOSE_FILE}" ps --services) )

            # ci_load for each service
            for SERVICE in "${SERVICES[@]}"; do
              python3 "${VSI_COMMON_DIR}/linux/ci_load.py" \
                --recipe-repo "IGNORE" \
                ${CI_RECIPE_REPO:+ --cache-repo "${CI_RECIPE_REPO}"} \
                ${CI_RECIPE_VERSION:+ --cache-version "${CI_RECIPE_VERSION}"} \
                ${CI_LOAD_OPTIONS:+ $CI_LOAD_OPTIONS} \
                "${COMPOSE_FILE}" "${SERVICE}"
            done

# -----
# CircleCI jobs
# -----
jobs:

  build_and_test:
    docker:
      - image: vsiri/circleci:bash-compose-lfs
    environment:
      VSI_COMMON_DIR: /vsi
    shell: /bin/bash -eo pipefail
    working_directory: ~/repo

    steps:

      - run:
          name: Install software
          command: |
            apk update
            apk add python3
            python3 --version
            pip3 install pyyaml

      - checkout
      - run:
          name: Checkout vsi_common
          command: |
            git clone --recursive https://github.com/VisionSystemsInc/vsi_common.git /vsi

      - setup_remote_docker

      - run:
          name: Additional setup
          command: |
            sed -i 's|context: ../..|context: ${VSI_COMMON_DIR}|' docker-compose.yml
            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"

      - ci_load:
          step_name: Build recipes (ci_load)
          compose_file: ./docker-compose.yml

      - ci_load:
          step_name: Build tests (ci_load)
          compose_file: ./tests/docker-compose.yml

      - run:
          name: Run integration tests
          environment:
            TESTLIB_DISCOVERY_DIR: /root/repo/tests
          command: |
            "${VSI_COMMON_DIR}/tests/run_tests"

# -----
# CircleCI workflows
# -----
workflows:
  recipes:
    jobs:
      - build_and_test
