version: '2.3'

services:
  amanda_deb:
    build:
      context: .
      dockerfile: recipe_amanda_deb.Dockerfile
      # args:
      #   AMANDA_VERSION: "${AMANDA_VERSION}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:amanda_deb

  gosu:
    build:
      context: .
      dockerfile: recipe_gosu.Dockerfile
      # args:
      #   GOSU_VERSION: "${GOSU_VERSION}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:gosu

  tini:
    build:
      context: .
      dockerfile: recipe_tini.Dockerfile
      # args:
      #   TINI_VERSION: "${TINI_VERSION}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:tini

  tini-musl:
    build:
      context: .
      dockerfile: recipe_tini-musl.Dockerfile
      # args:
      #   TINI_VERSION: "${TINI_VERSION}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:tini-musl

  ep:
    build:
      context: .
      dockerfile: recipe_ep.Dockerfile
      # args:
      #   EP_VERSION: "${EP_VERSION}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:ep

  jq:
    build:
      context: .
      dockerfile: recipe_jq.Dockerfile
      # args:
      #   JQ_VERSION: "${JQ_VERSION}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:jq

  ninja:
    build:
      context: .
      dockerfile: recipe_ninja.Dockerfile
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:ninja

  cmake:
    build:
      context: .
      dockerfile: recipe_cmake.Dockerfile
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:cmake

  docker:
    build:
      context: .
      dockerfile: recipe_docker.Dockerfile
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:docker

  docker-compose:
    build:
      context: .
      dockerfile: recipe_docker-compose.Dockerfile
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:docker-compose

  git-lfs:
    build:
      context: .
      dockerfile: recipe_git-lfs.Dockerfile
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:git-lfs

  pipenv:
    build:
      context: .
      dockerfile: recipe_pipenv.Dockerfile
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:pipenv

  pip-tools:
    build:
      context: .
      dockerfile: recipe_pip-tools.Dockerfile
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:pip-tools

  vsi:
    build:
      context: ../..
      dockerfile: docker/recipes/recipe_vsi.Dockerfile
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:vsi

  onetrueawk:
    build:
      context: .
      dockerfile: recipe_onetrueawk.Dockerfile
      # args:
      #   ONETRUEAWK_VERSION: "${ONETRUEAWK_VERSION}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:onetrueawk

  conda-python:
    build:
      context: .
      dockerfile: recipe_conda_python.Dockerfile
      # args:
      #   PYTHON_VERSION: "${PYTHON_VERSION}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:conda-python

  proj-data:
    build:
      context: .
      dockerfile: recipe_proj-data.Dockerfile
      # args:
      #   PROJ_DATA_VERSION: "${PROJ_DATA_VERSION}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:proj-data

  rocky:
    build:
      context: .
      dockerfile: recipe_rocky.Dockerfile
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:rocky

  cuda:
    build:
      context: .
      dockerfile: recipe_cuda.Dockerfile
      # args:
      #   CUDA_VERSION: "${CUDA_VERSION}"
      #   CUDNN_VERSION: "${CUDNN_VERSION}"
      #   CUDA_RECIPE_TARGET: "${CUDA_RECIPE_TARGET}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:cuda

  cudagl:
    build:
      context: .
      dockerfile: recipe_cudagl.Dockerfile
      # args:
      #   LIBGLVND_VERSION: "${LIBGLVND_VERSION}"
      #   CUDA_RECIPE_TARGET: "${CUDA_RECIPE_TARGET}"
    image: ${VSI_RECIPE_REPO-vsiri/recipe}:cudagl
